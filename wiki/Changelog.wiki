= User Changelog =

This is not a normal changelog, because you will not see internal changes like bugfixes or refactoring issues. This is an overview of the interface changes. Useful if you want to upgrade your older version of Serpent to a new one.

== 2.0.0 ==
  * made it PSR-0 compatible and Composer friendly (https://packagist.org/packages/mcsodbrenner/serpent) and added an PSR-0 autoloader for people which does not use Composer or an PSR-0 autoloader.
  * added specific Exceptions.
  * compilers are not longer plugins and not changeable. If you want to integrate other compilers just use mappings.
  * resources are not longer plugins and have to be injected with addResource().
  * own resources have to implement the interface \McSodbrenner\Serpent\Resource.
  * in mappings you have now direct access to the parameters via the array $this->_mapping_parameters.
  * you can add your own mappings via addMappings(). Now it is also possible to use anonymous functions.
  * changed syntax for block. They are now also mappings, e.g. "~:block('content')~" and "~:endblock()~".
  * new mapping ":loop". It's like a for loop or a dynamic :repeat.

== 1.3.0 ==
  * compiler serpent: Made it possible to dump all variables passed to the template via $this->vars
  * made PHP 5.3 compatible
  * added possibility to add a new inheritance branch via :render<br />So :render has now a new function, :include mirrors the old functionality

== 1.2.0 ==
  * global: autoescape feature was removed because of problems when mixing compilers
  * compiler serpent: added "repeat()" function
  * compiler serpent: added "eval()" function
  * compiler serpent: removed the two tildes need for extended blocks

== 1.1.0 beta ==
  * initialization was completely changed
  * plugin system was introduced
  * variables are now passed via $serpent->pass()

== 1.0.0 ==
  * mapped function ":include" was changed to ":render" which has now the same parameters as the public method render()
  * vars are not longer passed via public method render(). Instead they should be passed to the public member "vars".

